{"version":3,"sources":["services/http.service.js","services/movie.service.js","cmps/search-movie.jsx","cmps/card-ui.jsx","assets/imgs/No_image_available.png","cmps/movie-preview.jsx","cmps/movie-list.jsx","pages/home.jsx","assets/imgs/three-dots.svg","cmps/loader.jsx","cmps/ratings.jsx","pages/movie-details.jsx","routes.js","App.jsx","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","Error","movieName","q","movies","omdbID","movie","movieService","query","getById","SearchMovie","useState","txt","setTxt","navigate","useNavigate","className","onSubmit","ev","preventDefault","type","placeholder","value","onChange","target","disabled","CardUI","img","txt1","txt2","Card","sx","maxWidth","style","backgroundColor","CardMedia","component","height","image","CardContent","Typography","gutterBottom","variant","MoviePreview","to","imdbID","Title","Year","Poster","NoImg","MovieList","map","Home","setMovies","isError","setIsError","search","useLocation","URLSearchParams","useEffect","searchQuerry","get","searchMovies","moviesToUpdate","Array","isArray","length","Loader","src","loader","alt","Ratings","rating","Source","Value","MovieDetails","setMovie","isErr","setErr","useParams","getMovie","movieToFind","setTimeout","handleBack","poster","title","released","rated","genre","director","writer","actors","plot","language","country","awards","ratings","metascore","imdbRating","imdbVotes","production","website","Button","onClick","routes","path","element","App","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEMA,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,I,SAatBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACM,IAAIC,MAAJ,MAZd,0D,kECxBA,WAAqBC,GAArB,eAAAT,EAAA,+EAG6BJ,EAAgB,QAAS,CAAEc,EAAGD,IAH3D,cAGcE,EAHd,yBAIeA,GAJf,sCAMc,IAAIH,MAAJ,MANd,0D,kEAUA,WAAuBI,GAAvB,eAAAZ,EAAA,+EAE4BJ,EAAA,gBAAyBgB,IAFrD,cAEcC,EAFd,yBAGeA,GAHf,sCAKc,IAAIL,MAAM,mBALxB,0D,sBAUO,IAAMM,EAAe,CACxBC,M,4CACAC,Q,oDCpBSC,EAAc,WAAO,IAAD,EACPC,mBAAS,IADF,mBACtBC,EADsB,KACjBC,EADiB,KAEvBC,EAAWC,cAQjB,OACI,yBAASC,UAAU,eAAnB,SACI,uBAAMC,SANG,SAAAC,GACbA,EAAGC,iBACHL,EAAS,MAAD,OAAOF,KAIX,UACI,uBAAOQ,KAAK,OAAOC,YAAY,mBAAmBC,MAAOV,EAAKW,SAVrD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBX,EAAOW,EAAOF,UAUN,wBAAQF,KAAK,SAASJ,WAAYJ,GAAO,WAAYa,UAAWb,EAAhE,0B,oCCXT,SAASc,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAGhC,OACI,eAACC,EAAA,EAAD,CAAMd,UAAU,aAAae,GAAI,CAAEC,SAAU,KAAOC,MAAO,CAAEC,gBAAiB,aAA9E,UACI,cAACC,EAAA,EAAD,CACIC,UAAU,MACVC,OAAO,MACPC,MAAOX,IAEX,eAACY,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYxB,UAAU,QAAQyB,cAAY,EAACC,QAAQ,KAAKN,UAAU,MAAlE,SACKR,IAEL,cAACY,EAAA,EAAD,CAAYxB,UAAU,QAAQ0B,QAAQ,YAAtC,SACKb,UCtBN,UAA0B,+CCK5Bc,EAAe,SAAC,GAAe,IAAbrC,EAAY,EAAZA,MAC3B,OACI,qBAAKU,UAAU,gBAAf,SACI,cAAC,IAAD,CAAM4B,GAAE,WAAMtC,EAAMuC,QAApB,SACI,cAACnB,EAAD,CACIE,KAAMtB,EAAMwC,MACZjB,KAAMvB,EAAMyC,KACZpB,IAAsB,QAAjBrB,EAAM0C,OAAmBC,EAAQ3C,EAAM0C,cCRnDE,EAAY,SAAC,GAAgB,IAAd9C,EAAa,EAAbA,OACxB,OACI,qBAAKY,UAAU,aAAf,SACKZ,EAAO+C,KAAI,SAAA7C,GACR,OAAO,cAAC,EAAD,CAAiCA,MAAOA,GAArBA,EAAMuC,cCDnCO,EAAO,WAAO,IAAD,EACMzC,mBAAS,IADf,mBACfP,EADe,KACPiD,EADO,OAEQ1C,oBAAS,GAFjB,mBAEf2C,EAFe,KAENC,EAFM,KAGdC,EAAWC,cAAXD,OACFhD,EAAQ,IAAIkD,gBAAgBF,GAElCG,qBAAU,WACN,IAAMC,EAAepD,EAAMqD,IAAI,KAC3BD,GACAE,EAAaF,KAGlB,CAACJ,IAEJ,IAAMM,EAAY,uCAAG,WAAO5D,GAAP,eAAAT,EAAA,sEAEb8D,GAAW,GACXF,EAAU,IAHG,SAIgB9C,EAAaC,MAAMN,GAJnC,OAIP6D,EAJO,OAKbV,EAAUU,GALG,gDAObR,GAAW,GAPE,yDAAH,sDAUlB,OACI,0BAASvC,UAAU,OAAnB,UACI,sBAAKA,UAAU,QAAf,UACI,0DACA,iFACA,cAAC,EAAD,OAEHsC,GAAW,gGACXU,MAAMC,QAAQ7D,IAA6B,IAAlBA,EAAO8D,QAAgB,cAAC,EAAD,CAAW9D,OAAQA,Q,SCvCjE,MAA0B,uCCE5B+D,EAAS,WAClB,OAAO,qBAAKnD,UAAU,SAASoD,IAAKC,EAAQC,IAAI,MCDvCC,EAAU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OACI,yCAAYA,EAAOC,OAAnB,YAAoCD,EAAOE,UCOtCC,EAAe,WAAO,IAAD,EAEJhE,mBAAS,MAFL,mBAEvBL,EAFuB,KAEhBsE,EAFgB,OAGNjE,oBAAS,GAHH,mBAGvBkE,EAHuB,KAGhBC,EAHgB,KAK1BhE,EAAWC,cACPV,EAAW0E,cAAX1E,OACRsD,qBAAU,WACNqB,EAAS3E,KAEV,CAACA,IAEJ,IAAM2E,EAAQ,uCAAG,WAAO3E,GAAP,eAAAZ,EAAA,+EAEiBc,EAAaE,QAAQJ,GAFtC,OAEH4E,EAFG,OAGTL,EAASK,GAHA,gDAKTH,GAAO,GACPI,WAAWC,EAAY,KANd,yDAAH,sDAURA,EAAa,WACfrE,EAAS,MAGb,OAAI+D,EAAc,qBAAK7D,UAAU,eAAf,SAA8B,+DAC3CV,EAED,sBAAKU,UAAU,eAAf,UACI,qBAAKoD,IAAsB,QAAjB9D,EAAM8E,OAAmBnC,EAAQ3C,EAAM8E,OAAQd,IAAI,KAC7D,sBAAKtD,UAAU,eAAf,UACI,wCAAWV,EAAM+E,SACjB,+CAAkB/E,EAAMgF,YACxB,wCAAWhF,EAAMiF,SACjB,wCAAWjF,EAAMkF,SACjB,2CAAclF,EAAMmF,YACpB,yCAAYnF,EAAMoF,UAClB,yCAAYpF,EAAMqF,UAClB,uCAAUrF,EAAMsF,QAChB,2CAActF,EAAMuF,YACpB,0CAAavF,EAAMwF,WACnB,yCAAYxF,EAAMyF,UAClB,4CAAezF,EAAM0F,QAAQ7C,KAAI,SAAAqB,GAAM,OAAI,cAAC,EAAD,CAA6BA,OAAQA,GAAvBA,EAAOC,cAChE,4CAAenE,EAAM2F,aACrB,8CAAiB3F,EAAM4F,cACvB,6CAAgB5F,EAAM6F,aACtB,6CAAgB7F,EAAM8F,cACtB,0CAAa9F,EAAM+F,cAEvB,qBAAKrF,UAAU,eAAf,SACI,cAACsF,EAAA,EAAD,CAAQC,QAASpB,EAAjB,iCAxBO,cAAC,EAAD,KClCVqB,EAAS,CAClB,CACIC,KAAM,IACNC,QAAS,cAAC,EAAD,KAGb,CACID,KAAM,WACNC,QAAS,cAAC,EAAD,MCeFC,MArBf,WACE,OACE,qBAAK3F,UAAU,MAAf,SACE,cAAC,IAAD,UACE,+BACE,cAAC,IAAD,UACGwF,EAAOrD,KAAI,SAAAyD,GAAK,OACf,cAAC,IAAD,CAEEC,OAAK,EACLH,QAASE,EAAMF,QACfD,KAAMG,EAAMH,MAHPG,EAAMH,kBCFZK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7eac046e.chunk.js","sourcesContent":["import Axios from 'axios'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n})\n\nexport const httpService = {\n    get(endpoint, data) {\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'GET', data = null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data,\n            params: (method === 'GET') ? data : null\n        })\n        return res.data\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\n        console.dir(err)\n        throw new Error(err)\n    }\n}","import { httpService } from \"./http.service\"\n\nasync function query(movieName) {\n    try {\n\n        const movies = await httpService.get('movie', { q: movieName })\n        return movies\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nasync function getById(omdbID) {\n    try {\n        const movie = await httpService.get(`movie/${omdbID}`)\n        return movie\n    } catch (error) {\n        throw new Error('Movie not found')\n    }\n}\n\n\nexport const movieService = {\n    query,\n    getById\n}","import { useState } from \"react\"\nimport { useNavigate } from 'react-router-dom'\n\n\nexport const SearchMovie = () => {\n    const [txt, setTxt] = useState('')\n    const navigate = useNavigate()\n    const handleChange = ({ target }) => {\n        setTxt(target.value)\n    }\n    const onSubmit = ev => {\n        ev.preventDefault()\n        navigate(`?q=${txt}`)\n    }\n    return (\n        <section className=\"search-movie\">\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Enter movie name\" value={txt} onChange={handleChange} />\n                <button type=\"submit\" className={!txt && 'disabeld'} disabled={!txt}>Search</button>\n            </form>\n        </section>\n    )\n}","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\n\n\nexport function CardUI({ img, txt1, txt2 }) {\n\n\n    return (\n        <Card className='movie-card' sx={{ maxWidth: 345 }} style={{ backgroundColor: '#ffffff57' }}>\n            <CardMedia\n                component=\"img\"\n                height=\"140\"\n                image={img}\n            />\n            <CardContent>\n                <Typography className='txt-1' gutterBottom variant=\"h5\" component=\"div\">\n                    {txt1}\n                </Typography>\n                <Typography className='txt-2' variant=\"subtitle2\">\n                    {txt2}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}","export default __webpack_public_path__ + \"static/media/No_image_available.7ec9e7d5.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { CardUI } from './card-ui'\nimport NoImg from '../assets/imgs/No_image_available.png'\n\nexport const MoviePreview = ({ movie }) => {\n    return (\n        <div className=\"movie-preview\">\n            <Link to={`/${movie.imdbID}`}>\n                <CardUI\n                    txt1={movie.Title}\n                    txt2={movie.Year}\n                    img={movie.Poster === 'N/A' ? NoImg : movie.Poster}\n                />\n            </Link>\n        </div>\n    )\n}\n\n\n","\nimport React from 'react'\nimport { MoviePreview } from './movie-preview'\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <div className=\"movie-list\">\n            {movies.map(movie => {\n                return <MoviePreview key={movie.imdbID} movie={movie} />\n            })}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { movieService } from '../services/movie.service'\nimport { SearchMovie } from '../cmps/search-movie'\nimport { MovieList } from '../cmps/movie-list'\n\nexport const Home = () => {\n    const [movies, setMovies] = useState([])\n    const [isError, setIsError] = useState(false)\n    const { search } = useLocation()\n    const query = new URLSearchParams(search)\n\n    useEffect(() => {\n        const searchQuerry = query.get('q')\n        if (searchQuerry) {\n            searchMovies(searchQuerry)\n        }\n        // eslint-disable-next-line\n    }, [search])\n\n    const searchMovies = async (movieName) => {\n        try {\n            setIsError(false)\n            setMovies([])\n            const moviesToUpdate = await movieService.query(movieName)\n            setMovies(moviesToUpdate)\n        } catch (error) {\n            setIsError(true)\n        }\n    }\n    return (\n        <section className=\"home\">\n            <div className=\"title\">\n                <h2>Welcome to Movie Finder!</h2>\n                <h3>Please enter movie name and press Search button</h3>\n                <SearchMovie />\n            </div>\n            {isError && <h1>Sorry, can't find your movie right now. please try again later</h1>}\n            {Array.isArray(movies) && movies.length !== 0 && <MovieList movies={movies} />}\n        </section>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/three-dots.85961182.svg\";","import loader from '../assets/imgs/three-dots.svg'\n\nexport const Loader = () => {\n    return <img className='loader' src={loader} alt=\"\" />\n}","\n\nexport const Ratings = ({ rating }) => {\n    return (\n        <p>Source: {rating.Source}. score: {rating.Value}</p>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { Button } from '@mui/material';\nimport NoImg from '../assets/imgs/No_image_available.png'\nimport { Loader } from '../cmps/loader'\n\n\n\nimport { movieService } from '../services/movie.service'\nimport { Ratings } from '../cmps/ratings';\n\nexport const MovieDetails = () => {\n\n    const [movie, setMovie] = useState(null)\n    const [isErr, setErr] = useState(false)\n\n    let navigate = useNavigate()\n    const { omdbID } = useParams()\n    useEffect(() => {\n        getMovie(omdbID)\n        // eslint-disable-next-line\n    }, [omdbID])\n\n    const getMovie = async (omdbID) => {\n        try {\n            const movieToFind = await movieService.getById(omdbID)\n            setMovie(movieToFind)\n        } catch (error) {\n            setErr(true)\n            setTimeout(handleBack, 3000)\n        }\n    }\n\n    const handleBack = () => {\n        navigate('/')\n    }\n\n    if (isErr) return <div className=\"item-details\"><h1>No video found. Redirecting</h1></div>\n    if (!movie) return <Loader />\n    return (\n        <div className=\"item-details\">\n            <img src={movie.poster === 'N/A' ? NoImg : movie.poster} alt=\"\" />\n            <div className=\"details-data\">\n                <p>Title: {movie.title}</p>\n                <p>Release date: {movie.released}</p>\n                <p>Rated: {movie.rated}</p>\n                <p>Genre: {movie.genre}</p>\n                <p>Director: {movie.director}</p>\n                <p>Writer: {movie.writer}</p>\n                <p>Actors: {movie.actors}</p>\n                <p>Plot: {movie.plot}</p>\n                <p>Language: {movie.language}</p>\n                <p>Country: {movie.country}</p>\n                <p>Awards: {movie.awards}</p>\n                <div>Ratings: {movie.ratings.map(rating => <Ratings key={rating.Source} rating={rating} />)}</div>\n                <p>Metascore: {movie.metascore}</p>\n                <p>IMDB Rating: {movie.imdbRating}</p>\n                <p>IMDB Votes: {movie.imdbVotes}</p>\n                <p>Production: {movie.production}</p>\n                <p>Website: {movie.website}</p>\n            </div>\n            <div className=\"item-actions\">\n                <Button onClick={handleBack}>Back to search</Button>\n            </div>\n        </div>\n    )\n}\n","import { Home } from './pages/home'\nimport { MovieDetails } from './pages/movie-details'\n\n\nexport const routes = [\n    {\n        path: '/',\n        element: <Home />,\n    },\n\n    {\n        path: '/:omdbID',\n        element: <MovieDetails />\n    },\n\n]","import { HashRouter as Router, Route, Routes } from 'react-router-dom'\n\n\nimport './style/style.scss'\nimport { routes } from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <main>\n          <Routes>\n            {routes.map(route => (\n              <Route\n                key={route.path}\n                exact\n                element={route.element}\n                path={route.path}\n              />\n            ))}\n          </Routes>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}